include:
  - ci-templates/node.yml

image: node:18-alpine3.14

stages:
  - prepare
  - test
  - compile
  - doc
  - deploy

## install node dependencies
node:prepare:
  stage: prepare
  extends: .node-cache
  cache:
    policy: pull-push
  script:
    - npm ci --cache .npm --prefer-offline  --include=dev

### COMMON

common:lint:
  variables:
    CWD: packages/common
  extends: .node:lint
  stage: test
  needs:
    - node:prepare

common:unit:
  extends: .node:test:unit
  variables:
    CWD: packages/common
  stage: test
  needs:
    - node:prepare

common:build:
  extends: .node:build
  variables:
    CWD: packages/common
  stage: compile
  needs:
    - node:prepare

common:publish:gitlab:
  extends: .node:gitlab:publish
  stage: deploy
  variables:
    CWD: packages/common
    PACKAGE_DIR: ./dist

common:publish:npm:
  extends: .node:npm:publish
  stage: deploy
  variables:
    CWD: packages/common
    PACKAGE_DIR: ./dist
  needs:
    - common:build
    - common:publish:gitlab
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH || $CI_COMMIT_REF_NAME =~ /^v\d+\.\d+\.\d+.*$/
      when: manual

  # needs:
  #   - docs
  #   - core:build
  #   - common:build
  # rules:
  #   - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH || $CI_COMMIT_REF_NAME =~ /^v\d+\.\d+\.\d+.*$/
  #     changes:
  #       - package.json

### CORE

core:lint:
  variables:
    CWD: packages/core
  extends: .node:lint
  stage: test
  needs:
    - node:prepare

core:unit:
  extends: .node:test:unit
  variables:
    CWD: packages/core
  stage: test
  needs:
    - node:prepare

core:build:
  extends: .node:build
  variables:
    CWD: packages/core
  stage: compile
  needs:
    - node:prepare

core:publish:gitlab:
  extends: .node:gitlab:publish
  stage: deploy
  variables:
    CWD: packages/core
    PACKAGE_DIR: ./dist

core:publish:npm:
  extends: .node:npm:publish
  stage: deploy
  variables:
    CWD: packages/core
    PACKAGE_DIR: ./dist
  needs:
    - core:build
    - core:publish:gitlab
    - common:publish:gitlab
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH || $CI_COMMIT_REF_NAME =~ /^v\d+\.\d+\.\d+.*$/
      when: manual

### MEMO

memo:lint:
  variables:
    CWD: packages/memo
  extends: .node:lint
  stage: test
  needs:
    - node:prepare

memo:unit:
  extends: .node:test:unit
  variables:
    CWD: packages/memo
  stage: test
  needs:
    - node:prepare

memo:build:
  extends: .node:build
  variables:
    CWD: packages/memo
  stage: compile
  needs:
    - node:prepare

memo:publish:gitlab:
  extends: .node:gitlab:publish
  stage: deploy
  variables:
    CWD: packages/memo
    PACKAGE_DIR: ./dist

memo:publish:npm:
  extends: .node:npm:publish
  stage: deploy
  variables:
    CWD: packages/memo
    PACKAGE_DIR: ./dist
  needs:
    - memo:build
    - memo:publish:gitlab
    - core:publish:gitlab
    - common:publish:gitlab
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH || $CI_COMMIT_REF_NAME =~ /^v\d+\.\d+\.\d+.*$/
      when: manual

### DOCS

docs:
  extends: .node:build
  variables:
    ARTIFACT_PATH: packages/docs/dist/
  stage: doc
  needs:
    - node:prepare
  script:
    - npm run docs:build
  artifacts:
    untracked: true
    expire_in: 1 days

docs:publish:
  image: alpine
  stage: deploy
  before_script:
    - apk add git openssh-client
    - mkdir -p ~/.ssh
    - cp $PAGES_SSH_PRIVATE_KEY ~/.ssh/id_rsa
    - ssh-keyscan -H gitlab.com >> ~/.ssh/known_hosts
    - chmod -R 600 ~/.ssh
    - git config --global user.email "nicolas.thierion+ci@outlook.com"
    - git config --global user.name "Gitlab CI"

  needs:
    - docs

  script:
    - cd packages/docs/
    - rm -rf .git .gitignore
    - git init --initial-branch=main
    - git add . dist .gitlab-ci.yml
    - git commit -m"deploy doc"
    - git push -f git@gitlab.com:aspectjs/aspectjs.gitlab.io.git main

  rules:
    - if: '$CI_COMMIT_REF_PROTECTED == "true"'
  # - when: manual
  #   - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH || $CI_COMMIT_REF_NAME =~ /^v\d+\.\d+\.\d+.*$/
